// Generated by view binder compiler. Do not edit!
package com.example.ejemploretrofit.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.ejemploretrofit.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemProductoBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final ImageView imgEditar;

  @NonNull
  public final ImageView imgEliminar;

  @NonNull
  public final ImageView imgPost;

  @NonNull
  public final TextView tvDescripcion;

  @NonNull
  public final TextView tvTitulo;

  private ItemProductoBinding(@NonNull ConstraintLayout rootView, @NonNull CardView cardView,
      @NonNull ImageView imgEditar, @NonNull ImageView imgEliminar, @NonNull ImageView imgPost,
      @NonNull TextView tvDescripcion, @NonNull TextView tvTitulo) {
    this.rootView = rootView;
    this.cardView = cardView;
    this.imgEditar = imgEditar;
    this.imgEliminar = imgEliminar;
    this.imgPost = imgPost;
    this.tvDescripcion = tvDescripcion;
    this.tvTitulo = tvTitulo;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemProductoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemProductoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_producto, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemProductoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardView;
      CardView cardView = rootView.findViewById(id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.img_editar;
      ImageView imgEditar = rootView.findViewById(id);
      if (imgEditar == null) {
        break missingId;
      }

      id = R.id.img_eliminar;
      ImageView imgEliminar = rootView.findViewById(id);
      if (imgEliminar == null) {
        break missingId;
      }

      id = R.id.img_Post;
      ImageView imgPost = rootView.findViewById(id);
      if (imgPost == null) {
        break missingId;
      }

      id = R.id.tv_Descripcion;
      TextView tvDescripcion = rootView.findViewById(id);
      if (tvDescripcion == null) {
        break missingId;
      }

      id = R.id.tv_Titulo;
      TextView tvTitulo = rootView.findViewById(id);
      if (tvTitulo == null) {
        break missingId;
      }

      return new ItemProductoBinding((ConstraintLayout) rootView, cardView, imgEditar, imgEliminar,
          imgPost, tvDescripcion, tvTitulo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
